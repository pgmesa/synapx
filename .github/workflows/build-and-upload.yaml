name: Build and Upload to PyPI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build and Publish Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9, 3.10, 3.11, 3.12]
        libtorch-version: [2.0.0, 2.1.0, 2.2.0, 2.3.0, 2.4.0, 2.5.0]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine cmake
          python -m pip install torch==${{ matrix.libtorch-version }}

      - name: Download Libtorch
        run: |
          mkdir -p libtorch
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            curl -L -o libtorch.zip "https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-${{ matrix.libtorch-version }}.zip"
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            curl -L -o libtorch.zip "https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-${{ matrix.libtorch-version }}.zip"
          fi
          unzip libtorch.zip -d libtorch
          rm libtorch.zip

      - name: Build Python Package
        run: |
          cmake -S . -B build -DCMAKE_PREFIX_PATH=libtorch
          cmake --build build --config Release
          python setup.py bdist_wheel

      - name: Upload to PyPI
        if: github.ref_type == 'tag'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload dist/*