name: Build and Upload to PyPI

on:
  release:
    types: [published]

jobs:
  build:
    name: Build and Publish Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install System Dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake build-essential ninja

      - name: Install Python Dependencies
        shell: bash
        run: |
          pip install --upgrade pip setuptools wheel twine build toml packaging \
            "numpy<2.0.0" \
            "pybind11>=2.6.0,<3.0.0" \
            "pybind11-stubgen>=2.0.0,<3.0.0" \
            "pytest>=8.0.0,<9.0.0"

      - name: Install GCC 12 and G++ 12
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-12 g++-12

      - name: Install VCPKG (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Set VCPKG_ROOT (Linux)
        if: runner.os == 'Linux'
        run: echo "VCPKG_ROOT=${{ github.workspace }}/vcpkg" >> $GITHUB_ENV

      - name: Install VCPKG (Windows)
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat

      - name: Set VCPKG_ROOT (Windows)
        if: runner.os == 'Windows'
        run: echo "VCPKG_ROOT=${{ github.workspace }}\\vcpkg" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Build Extension & Wheel
        run: python scripts/build_wheel.py

      # - name: Upload to PyPI
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: |
      #     python -m twine upload dist/*

      - name: Upload Wheels to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        if: github.event_name == 'release'
